	                <div class="map_wrap">
	                <div id="map" style="width: 100%;height:100%;position: relative;overflow: hidden;min-height: 300px;min-width: 300px;">
	                </div>
	                <div class="custom_typecontrol radius_border">
				        <span id="btnRoadmap" class="selected_btn_map" onclick="setMapType('roadmap')">지도</span>
				        <span id="btnSkyview" class="btn_map" onclick="setMapType('skyview')">스카이뷰</span>
	    			</div>
				    <!-- 지도 확대, 축소 컨트롤 div 입니다 -->
				    <div class="custom_zoomcontrol radius_border">
				        <span onclick="zoomIn()"><img src="https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/ico_plus.png" alt="확대"></span>
				        <span onclick="zoomOut()"><img src="https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/ico_minus.png" alt="축소"></span>
				    </div>
				    </div>
				    <div>
				  	<hr class="primary">
				    <p>
					    <button class="btn btn-default btn-lg wow flipInX" onclick="selectOverlay('MARKER')">마커</button>
					    <button class="btn btn-default btn-lg wow flipInX" onclick="selectOverlay('POLYLINE')">선</button>
					    <button class="btn btn-default btn-lg wow flipInX" onclick="selectOverlay('CIRCLE')">원</button>
					    <button class="btn btn-default btn-lg wow flipInX" onclick="selectOverlay('RECTANGLE')">사각형</button>
					    <button class="btn btn-default btn-lg wow flipInX" onclick="selectOverlay('POLYGON')">다각형</button>
					</p>
					</div>
          
          
          
                  <script type="text/javascript" src="//dapi.kakao.com/v2/maps/sdk.js?appkey=lllllllllllllll&libraries=services,clusterer,drawing"></script>
                <script type="text/javascript">

                var container = document.getElementById('map'); //지도를 담을 영역의 DOM 레퍼런스
                var options = { //지도를 생성할 때 필요한 기본 옵션
                	center: new kakao.maps.LatLng(33.450701, 126.570667), //지도의 중심좌표.
                	level: 3 //지도의 레벨(확대, 축소 정도)
                };

                var map = new kakao.maps.Map(container, options); //지도 생성 및 객체 리턴
             // HTML5의 geolocation으로 사용할 수 있는지 확인합니다
                if (navigator.geolocation) {

                    // GeoLocation을 이용해서 접속 위치를 얻어옵니다
                    navigator.geolocation.getCurrentPosition(function(position) {

                        var lat = position.coords.latitude, // 위도
                            lon = position.coords.longitude; // 경도

                        var locPosition = new kakao.maps.LatLng(lat, lon), // 마커가 표시될 위치를 geolocation으로 얻어온 좌표로 생성합니다
                            message = '<div style="padding:5px;">여기에 계신가요?!</div>'; // 인포윈도우에 표시될 내용입니다

                        // 마커와 인포윈도우를 표시합니다
                        displayMarker(locPosition, message);

                      });

                } else { // HTML5의 GeoLocation을 사용할 수 없을때 마커 표시 위치와 인포윈도우 내용을 설정합니다

                    var locPosition = new kakao.maps.LatLng(33.450701, 126.570667),
                        message = 'geolocation을 사용할수 없어요..'

                    displayMarker(locPosition, message);
                }
             // 지도에 마커와 인포윈도우를 표시하는 함수입니다
                function displayMarker(locPosition, message) {

                    // 마커를 생성합니다
                    var marker = new kakao.maps.Marker({
                        map: map,
                        position: locPosition
                    });

                    var iwContent = message, // 인포윈도우에 표시할 내용
                        iwRemoveable = true;

                    // 인포윈도우를 생성합니다
                    var infowindow = new kakao.maps.InfoWindow({
                        content : iwContent,
                        removable : iwRemoveable
                    });

                    // 인포윈도우를 마커위에 표시합니다
                    infowindow.open(map, marker);

                    // 지도 중심좌표를 접속위치로 변경합니다
                    map.setCenter(locPosition);
                }


             // 지도타입 컨트롤의 지도 또는 스카이뷰 버튼을 클릭하면 호출되어 지도타입을 바꾸는 함수입니다
                function setMapType(maptype) {
                    var roadmapControl = document.getElementById('btnRoadmap');
                    var skyviewControl = document.getElementById('btnSkyview');
                    if (maptype === 'roadmap') {
                        map.setMapTypeId(kakao.maps.MapTypeId.ROADMAP);
                        roadmapControl.className = 'selected_btn_map';
                        skyviewControl.className = 'btn_map';
                    } else {
                        map.setMapTypeId(kakao.maps.MapTypeId.HYBRID);
                        skyviewControl.className = 'selected_btn_map';
                        roadmapControl.className = 'btn_map';
                    }
                }

                // 지도 확대, 축소 컨트롤에서 확대 버튼을 누르면 호출되어 지도를 확대하는 함수입니다
                function zoomIn() {
                    map.setLevel(map.getLevel() - 1);
                }

                // 지도 확대, 축소 컨트롤에서 축소 버튼을 누르면 호출되어 지도를 확대하는 함수입니다
                function zoomOut() {
                    map.setLevel(map.getLevel() + 1);
                }

                var options = { // Drawing Manager를 생성할 때 사용할 옵션입니다
                	    map: map, // Drawing Manager로 그리기 요소를 그릴 map 객체입니다
                	    drawingMode: [ // drawing manager로 제공할 그리기 요소 모드입니다
                	        kakao.maps.drawing.OverlayType.MARKER,
                	        kakao.maps.drawing.OverlayType.POLYLINE,
                	        kakao.maps.drawing.OverlayType.RECTANGLE,
                	        kakao.maps.drawing.OverlayType.CIRCLE,
                	        kakao.maps.drawing.OverlayType.POLYGON
                	    ],
                	    // 사용자에게 제공할 그리기 가이드 툴팁입니다
                	    // 사용자에게 도형을 그릴때, 드래그할때, 수정할때 가이드 툴팁을 표시하도록 설정합니다
                	    guideTooltip: ['draw', 'drag', 'edit'],
                	    markerOptions: { // 마커 옵션입니다
                	        draggable: true, // 마커를 그리고 나서 드래그 가능하게 합니다
                	        removable: true // 마커를 삭제 할 수 있도록 x 버튼이 표시됩니다
                	    },
                	    polylineOptions: { // 선 옵션입니다
                	        draggable: true, // 그린 후 드래그가 가능하도록 설정합니다
                	        removable: true, // 그린 후 삭제 할 수 있도록 x 버튼이 표시됩니다
                	        editable: true, // 그린 후 수정할 수 있도록 설정합니다
                	        strokeColor: '#39f', // 선 색
                	        hintStrokeStyle: 'dash', // 그리중 마우스를 따라다니는 보조선의 선 스타일
                	        hintStrokeOpacity: 0.5  // 그리중 마우스를 따라다니는 보조선의 투명도
                	    },
                	    rectangleOptions: {
                	        draggable: true,
                	        removable: true,
                	        editable: true,
                	        strokeColor: '#39f', // 외곽선 색
                	        fillColor: '#39f', // 채우기 색
                	        fillOpacity: 0.5 // 채우기색 투명도
                	    },
                	    circleOptions: {
                	        draggable: true,
                	        removable: true,
                	        editable: true,
                	        strokeColor: '#39f',
                	        fillColor: '#39f',
                	        fillOpacity: 0.5
                	    },
                	    polygonOptions: {
                	        draggable: true,
                	        removable: true,
                	        editable: true,
                	        strokeColor: '#39f',
                	        fillColor: '#39f',
                	        fillOpacity: 0.5,
                	        hintStrokeStyle: 'dash',
                	        hintStrokeOpacity: 0.5
                	    }
                	};

                	// 위에 작성한 옵션으로 Drawing Manager를 생성합니다
                	var manager = new kakao.maps.drawing.DrawingManager(options);

                	// 버튼 클릭 시 호출되는 핸들러 입니다
                	function selectOverlay(type) {
                	    // 그리기 중이면 그리기를 취소합니다
                	    manager.cancel();

                	    // 클릭한 그리기 요소 타입을 선택합니다
                	    manager.select(kakao.maps.drawing.OverlayType[type]);
                	}

                </script>
          
